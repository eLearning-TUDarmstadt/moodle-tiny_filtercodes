{"version":3,"file":"ajax.min.js","sources":["../src/ajax.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Ajax methods for the Moodle tiny_filtercodes plugin.\n *\n * @module     tiny_filtercodes\n * @author      Leon Camus\n * @copyright   2025 onwards Leon Camus\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Ajax from 'core/ajax';\n\n/**\n * Get the groups by course id.\n *\n * @param {number} courseId The course id to fetch the groups from.\n * @return {Promise<{\n *     id: number,\n *     name: string,\n *     idnumber: string,\n * }[]>} Resolved with the course groups.\n */\nexport const getCourseGroupsData = function(courseId) {\n    return Ajax.call([{\n        methodname: 'tiny_filtercodes_get_groups',\n        args: {\n            courseid: courseId,\n        },\n    }])[0];\n};\n\n/**\n * Get the groupings by course id.\n *\n * @param {number} courseId The course id to fetch the groupings from.\n * @return {Promise<{\n *   id: number,\n *   name: string,\n *   idnumber: string,\n * }[]>} Resolved with the course groupings.\n */\nexport const getCourseGroupingsData = function(courseId) {\n    return Ajax.call([{\n        methodname: 'tiny_filtercodes_get_groupings',\n        args: {\n            courseid: courseId,\n        },\n    }])[0];\n};\n\n/**\n * Get the custom content from the database.\n * @return {Promise<{\n *   id: number,\n *   key: string,\n *   value: string,\n * }[]>} Resolved with the custom content.\n */\nexport const getCustomContentData = function() {\n    return Ajax.call([{\n        methodname: 'tiny_filtercodes_get_customcontent',\n        args: {},\n    }])[0];\n};\n\n/**\n * Get the custom content from the database.\n * @return {Promise<{\n *   id: number,\n *   key: string,\n *   value: string,\n * }[]>} Resolved with the custom content.\n */\nexport const getCourseCustomFields = function() {\n    const courseId = M.cfg.courseId;\n    if (!courseId) {\n        return Promise.resolve([]);\n    }\n\n    return Ajax.call([{\n        methodname: 'tiny_filtercodes_get_course_customfields',\n        args: {\n            courseid: courseId,\n        },\n    }])[0];\n};\n\n\n/**\n * Get courses.\n * @param {string} query The query to search for.\n * @param {number} page The page number.\n * @param {number} perpage The number of courses per page.\n * @return {Promise<{\n *     id: number,\n *     shortname: string,\n *     categoryid: number,\n *     categorysortorder?: number,\n *     fullname: string,\n *     displayname: string,\n *     idnumber?: string,\n *     summary: string,\n *     summaryformat: string,\n *     format: string,\n *     showgrades?: number,\n *     newsitems?: number,\n *     startdate: number,\n *     enddate: number,\n *     numsections?: number,\n *     maxbytes?: number,\n *     showreports?: number,\n *     visible?: number,\n *     hiddensections?: number,\n *     groupmode?: number,\n *     groupmodeforce?: number,\n *     defaultgroupingid?: number,\n *     timecreated?: number,\n *     timemodified?: number,\n *     enablecompletion?: number,\n *     completionnotify?: number,\n *     lang?: string,\n *     forcetheme?: string,\n *     courseformatoptions?: {\n *         name: string,\n *         value: string\n *     }[],\n *     showactivitydates: boolean,\n *     showcompletionconditions: boolean,\n *     customfields?: {\n *         name: string,\n *         shortname: string,\n *         type: string,\n *         valueraw: string,\n *         value: string\n *     }[],\n * }[]>} Resolved with the courses data.\n */\nexport const getCoursesData = function(query = \"\", page = 0, perpage = 10) {\n    if (query) {\n        return Ajax.call([{\n            methodname: 'core_course_search_courses',\n            args: {\n                searchargs: {\n                    criterianame: 'search',\n                    criteriavalue: query,\n                    page,\n                    perpage,\n                }\n            },\n        }])[0];\n    }\n\n    return Ajax.call([{\n        methodname: 'core_course_get_courses',\n        args: {},\n    }])[0];\n};\n\n/**\n * Get the categories from the database.\n * @return {Promise<{\n *   id: number,\n *   name: string,\n *   idnumber?: string,\n *   description: string,\n *   descriptionformat: string,\n *   parent: number,\n *   sortorder: number,\n *   coursecount: number,\n *   visible?: number,\n *   visibleold?: number,\n *   timemodified?: number,\n *   depth: number,\n *   path: string,\n *   theme?: string,\n * }[]>} Resolved with the custom content.\n */\nexport const getCategoriesData = function() {\n    return Ajax.call([{\n        methodname: 'tiny_filtercodes_get_categories',\n        args: {},\n    }])[0];\n};\n"],"names":["courseId","Ajax","call","methodname","args","courseid","M","cfg","Promise","resolve","query","page","perpage","searchargs","criterianame","criteriavalue"],"mappings":";;;;;;;;kUAmCmC,SAASA,iBACjCC,cAAKC,KAAK,CAAC,CACdC,WAAY,8BACZC,KAAM,CACFC,SAAUL,aAEd,oCAa8B,SAASA,iBACpCC,cAAKC,KAAK,CAAC,CACdC,WAAY,iCACZC,KAAM,CACFC,SAAUL,aAEd,kCAW4B,kBACzBC,cAAKC,KAAK,CAAC,CACdC,WAAY,qCACZC,KAAM,MACN,mCAW6B,iBAC3BJ,SAAWM,EAAEC,IAAIP,gBAClBA,SAIEC,cAAKC,KAAK,CAAC,CACdC,WAAY,2CACZC,KAAM,CACFC,SAAUL,aAEd,GAROQ,QAAQC,QAAQ,6BA6DD,eAASC,6DAAQ,GAAIC,4DAAO,EAAGC,+DAAU,UAC/DF,MACOT,cAAKC,KAAK,CAAC,CACdC,WAAY,6BACZC,KAAM,CACFS,WAAY,CACRC,aAAc,SACdC,cAAeL,MACfC,KAAAA,KACAC,QAAAA,aAGR,GAGDX,cAAKC,KAAK,CAAC,CACdC,WAAY,0BACZC,KAAM,MACN,+BAsByB,kBACtBH,cAAKC,KAAK,CAAC,CACdC,WAAY,kCACZC,KAAM,MACN"}